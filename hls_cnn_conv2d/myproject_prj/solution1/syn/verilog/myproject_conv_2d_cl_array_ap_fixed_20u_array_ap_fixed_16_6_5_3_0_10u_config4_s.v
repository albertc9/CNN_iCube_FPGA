// ==============================================================
// Generated by Vitis HLS v2023.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2023 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module myproject_conv_2d_cl_array_ap_fixed_20u_array_ap_fixed_16_6_5_3_0_10u_config4_s (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        layer3_out_dout,
        layer3_out_num_data_valid,
        layer3_out_fifo_cap,
        layer3_out_empty_n,
        layer3_out_read,
        layer4_out_din,
        layer4_out_num_data_valid,
        layer4_out_fifo_cap,
        layer4_out_full_n,
        layer4_out_write
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [319:0] layer3_out_dout;
input  [8:0] layer3_out_num_data_valid;
input  [8:0] layer3_out_fifo_cap;
input   layer3_out_empty_n;
output   layer3_out_read;
output  [159:0] layer4_out_din;
input  [8:0] layer4_out_num_data_valid;
input  [8:0] layer4_out_fifo_cap;
input   layer4_out_full_n;
output   layer4_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg layer3_out_read;
reg layer4_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_99;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_98;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_97;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_96;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_95;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_94;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_93;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_92;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_91;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_90;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_89;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_88;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_87;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_86;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_85;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_84;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_83;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_82;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_81;
reg   [15:0] p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_80;
reg   [31:0] sX_1;
reg   [31:0] pX_1;
reg    layer3_out_blk_n;
wire    ap_CS_fsm_state3;
reg    layer4_out_blk_n;
wire    ap_CS_fsm_state5;
reg   [0:0] and_ln360_reg_1771;
wire   [7:0] i_iw_fu_1189_p2;
reg   [7:0] i_iw_reg_1635;
wire    grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done;
wire   [15:0] trunc_ln59_fu_1195_p1;
reg   [15:0] trunc_ln59_reg_1640;
reg   [15:0] trunc_ln59_1_reg_1646;
reg   [15:0] trunc_ln59_2_reg_1652;
reg   [15:0] trunc_ln59_3_reg_1658;
reg   [15:0] trunc_ln59_4_reg_1664;
reg   [15:0] trunc_ln59_5_reg_1670;
reg   [15:0] trunc_ln59_6_reg_1676;
reg   [15:0] trunc_ln59_7_reg_1682;
reg   [15:0] trunc_ln59_8_reg_1688;
reg   [15:0] trunc_ln59_9_reg_1694;
reg   [15:0] trunc_ln59_s_reg_1700;
reg   [15:0] trunc_ln59_10_reg_1706;
reg   [15:0] trunc_ln59_11_reg_1712;
reg   [15:0] trunc_ln59_12_reg_1718;
reg   [15:0] trunc_ln59_13_reg_1724;
reg   [15:0] trunc_ln59_14_reg_1730;
reg   [15:0] trunc_ln59_15_reg_1736;
reg   [15:0] trunc_ln59_16_reg_1742;
reg   [15:0] trunc_ln59_17_reg_1748;
reg   [15:0] trunc_ln59_18_reg_1754;
wire   [0:0] icmp_ln360_fu_1393_p2;
reg   [0:0] icmp_ln360_reg_1763;
wire   [0:0] and_ln360_fu_1409_p2;
wire   [1:0] in_index_fu_1415_p2;
wire    ap_CS_fsm_state4;
wire    grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start;
wire    grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_idle;
wire    grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_ready;
reg   [15:0] mux_case_180161141_reg_512;
reg    ap_block_state1;
reg    ap_block_state5;
wire   [0:0] icmp_ln53_fu_1469_p2;
reg   [15:0] mux_case_181162239_reg_522;
reg   [15:0] mux_case_182163337_reg_532;
reg   [15:0] mux_case_183164435_reg_542;
reg   [15:0] mux_case_184165533_reg_552;
reg   [15:0] mux_case_185166631_reg_562;
reg   [15:0] mux_case_186167729_reg_572;
reg   [15:0] mux_case_187168827_reg_582;
reg   [15:0] mux_case_188169925_reg_592;
reg   [15:0] mux_case_1891701023_reg_602;
reg   [15:0] mux_case_1901711121_reg_612;
reg   [15:0] mux_case_1911721219_reg_622;
reg   [15:0] mux_case_1921731317_reg_632;
reg   [15:0] mux_case_1931741415_reg_642;
reg   [15:0] mux_case_1941751513_reg_652;
reg   [15:0] mux_case_1951761611_reg_662;
reg   [15:0] mux_case_196177179_reg_672;
reg   [15:0] mux_case_197178187_reg_682;
reg   [15:0] mux_case_198179195_reg_692;
reg   [15:0] mux_case_199180203_reg_702;
reg   [7:0] i_iw42_reg_712;
reg   [1:0] in_index1_reg_724;
wire   [0:0] icmp_ln42_fu_1421_p2;
wire   [31:0] select_ln391_fu_1449_p3;
reg   [31:0] ap_phi_mux_storemerge_phi_fu_738_p4;
wire   [0:0] icmp_ln384_fu_1432_p2;
reg    grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start_reg;
wire    ap_CS_fsm_state2;
wire   [31:0] add_ln384_fu_1427_p2;
wire   [0:0] icmp_ln360_1_fu_1403_p2;
wire   [31:0] add_ln391_fu_1444_p2;
reg   [4:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 5'd1;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_99 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_98 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_97 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_96 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_95 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_94 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_93 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_92 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_91 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_90 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_89 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_88 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_87 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_86 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_85 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_84 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_83 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_82 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_81 = 16'd0;
#0 p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_80 = 16'd0;
#0 sX_1 = 32'd0;
#0 pX_1 = 32'd0;
#0 grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start_reg = 1'b0;
end

myproject_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start),
    .ap_done(grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done),
    .ap_idle(grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_idle),
    .ap_ready(grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_ready),
    .mux_case_180161141(mux_case_180161141_reg_512),
    .mux_case_181162239(mux_case_181162239_reg_522),
    .mux_case_182163337(mux_case_182163337_reg_532),
    .mux_case_183164435(mux_case_183164435_reg_542),
    .mux_case_184165533(mux_case_184165533_reg_552),
    .mux_case_185166631(mux_case_185166631_reg_562),
    .mux_case_186167729(mux_case_186167729_reg_572),
    .mux_case_187168827(mux_case_187168827_reg_582),
    .mux_case_188169925(mux_case_188169925_reg_592),
    .mux_case_1891701023(mux_case_1891701023_reg_602),
    .mux_case_1901711121(mux_case_1901711121_reg_612),
    .mux_case_1911721219(mux_case_1911721219_reg_622),
    .mux_case_1921731317(mux_case_1921731317_reg_632),
    .mux_case_1931741415(mux_case_1931741415_reg_642),
    .mux_case_1941751513(mux_case_1941751513_reg_652),
    .mux_case_1951761611(mux_case_1951761611_reg_662),
    .mux_case_196177179(mux_case_196177179_reg_672),
    .mux_case_197178187(mux_case_197178187_reg_682),
    .mux_case_198179195(mux_case_198179195_reg_692),
    .mux_case_199180203(mux_case_199180203_reg_702)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd1) & (1'b0 == ap_block_state5))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start_reg <= 1'b1;
        end else if ((grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_ready == 1'b1)) begin
            grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        i_iw42_reg_712 <= i_iw_reg_1635;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        i_iw42_reg_712 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done == 1'b0) | (layer3_out_empty_n == 1'b0)) & (1'd1 == and_ln360_fu_1409_p2) & (1'b1 == ap_CS_fsm_state3))) begin
        in_index1_reg_724 <= 2'd0;
    end else if (((icmp_ln42_fu_1421_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
        in_index1_reg_724 <= in_index_fu_1415_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_180161141_reg_512 <= trunc_ln59_reg_1640;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_180161141_reg_512 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_99;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_181162239_reg_522 <= trunc_ln59_1_reg_1646;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_181162239_reg_522 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_98;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_182163337_reg_532 <= trunc_ln59_2_reg_1652;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_182163337_reg_532 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_97;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_183164435_reg_542 <= trunc_ln59_3_reg_1658;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_183164435_reg_542 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_96;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_184165533_reg_552 <= trunc_ln59_4_reg_1664;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_184165533_reg_552 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_95;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_185166631_reg_562 <= trunc_ln59_5_reg_1670;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_185166631_reg_562 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_94;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_186167729_reg_572 <= trunc_ln59_6_reg_1676;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_186167729_reg_572 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_93;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_187168827_reg_582 <= trunc_ln59_7_reg_1682;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_187168827_reg_582 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_92;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_188169925_reg_592 <= trunc_ln59_8_reg_1688;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_188169925_reg_592 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_91;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_1891701023_reg_602 <= trunc_ln59_9_reg_1694;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_1891701023_reg_602 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_90;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_1901711121_reg_612 <= trunc_ln59_s_reg_1700;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_1901711121_reg_612 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_89;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_1911721219_reg_622 <= trunc_ln59_10_reg_1706;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_1911721219_reg_622 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_88;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_1921731317_reg_632 <= trunc_ln59_11_reg_1712;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_1921731317_reg_632 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_87;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_1931741415_reg_642 <= trunc_ln59_12_reg_1718;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_1931741415_reg_642 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_86;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_1941751513_reg_652 <= trunc_ln59_13_reg_1724;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_1941751513_reg_652 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_85;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_1951761611_reg_662 <= trunc_ln59_14_reg_1730;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_1951761611_reg_662 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_84;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_196177179_reg_672 <= trunc_ln59_15_reg_1736;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_196177179_reg_672 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_83;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_197178187_reg_682 <= trunc_ln59_16_reg_1742;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_197178187_reg_682 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_82;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_198179195_reg_692 <= trunc_ln59_17_reg_1748;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_198179195_reg_692 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_81;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
        mux_case_199180203_reg_702 <= trunc_ln59_18_reg_1754;
    end else if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
        mux_case_199180203_reg_702 <= p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_80;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5))) begin
        if ((icmp_ln384_fu_1432_p2 == 1'd1)) begin
            pX_1 <= 32'd0;
        end else if ((icmp_ln384_fu_1432_p2 == 1'd0)) begin
            pX_1 <= add_ln384_fu_1427_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((~((grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done == 1'b0) | (layer3_out_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        and_ln360_reg_1771 <= and_ln360_fu_1409_p2;
        i_iw_reg_1635 <= i_iw_fu_1189_p2;
        icmp_ln360_reg_1763 <= icmp_ln360_fu_1393_p2;
        trunc_ln59_10_reg_1706 <= {{layer3_out_dout[191:176]}};
        trunc_ln59_11_reg_1712 <= {{layer3_out_dout[207:192]}};
        trunc_ln59_12_reg_1718 <= {{layer3_out_dout[223:208]}};
        trunc_ln59_13_reg_1724 <= {{layer3_out_dout[239:224]}};
        trunc_ln59_14_reg_1730 <= {{layer3_out_dout[255:240]}};
        trunc_ln59_15_reg_1736 <= {{layer3_out_dout[271:256]}};
        trunc_ln59_16_reg_1742 <= {{layer3_out_dout[287:272]}};
        trunc_ln59_17_reg_1748 <= {{layer3_out_dout[303:288]}};
        trunc_ln59_18_reg_1754 <= {{layer3_out_dout[319:304]}};
        trunc_ln59_1_reg_1646 <= {{layer3_out_dout[31:16]}};
        trunc_ln59_2_reg_1652 <= {{layer3_out_dout[47:32]}};
        trunc_ln59_3_reg_1658 <= {{layer3_out_dout[63:48]}};
        trunc_ln59_4_reg_1664 <= {{layer3_out_dout[79:64]}};
        trunc_ln59_5_reg_1670 <= {{layer3_out_dout[95:80]}};
        trunc_ln59_6_reg_1676 <= {{layer3_out_dout[111:96]}};
        trunc_ln59_7_reg_1682 <= {{layer3_out_dout[127:112]}};
        trunc_ln59_8_reg_1688 <= {{layer3_out_dout[143:128]}};
        trunc_ln59_9_reg_1694 <= {{layer3_out_dout[159:144]}};
        trunc_ln59_reg_1640 <= trunc_ln59_fu_1195_p1;
        trunc_ln59_s_reg_1700 <= {{layer3_out_dout[175:160]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd1) & (1'b0 == ap_block_state5))) begin
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_80 <= trunc_ln59_18_reg_1754;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_81 <= trunc_ln59_17_reg_1748;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_82 <= trunc_ln59_16_reg_1742;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_83 <= trunc_ln59_15_reg_1736;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_84 <= trunc_ln59_14_reg_1730;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_85 <= trunc_ln59_13_reg_1724;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_86 <= trunc_ln59_12_reg_1718;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_87 <= trunc_ln59_11_reg_1712;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_88 <= trunc_ln59_10_reg_1706;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_89 <= trunc_ln59_s_reg_1700;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_90 <= trunc_ln59_9_reg_1694;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_91 <= trunc_ln59_8_reg_1688;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_92 <= trunc_ln59_7_reg_1682;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_93 <= trunc_ln59_6_reg_1676;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_94 <= trunc_ln59_5_reg_1670;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_95 <= trunc_ln59_4_reg_1664;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_96 <= trunc_ln59_3_reg_1658;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_97 <= trunc_ln59_2_reg_1652;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_98 <= trunc_ln59_1_reg_1646;
        p_ZZN4nnet24compute_output_buffer_1dINS_5arrayI8ap_fixedILi16ELi6EL9ap_q_mode5EL9_99 <= trunc_ln59_reg_1640;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5))) begin
        sX_1 <= ap_phi_mux_storemerge_phi_fu_738_p4;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state1)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

always @ (*) begin
    if (((grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done == 1'b0) | (layer3_out_empty_n == 1'b0))) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state5)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd1) & (1'b0 == ap_block_state5))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (real_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        if ((icmp_ln384_fu_1432_p2 == 1'd1)) begin
            ap_phi_mux_storemerge_phi_fu_738_p4 = 32'd0;
        end else if ((icmp_ln384_fu_1432_p2 == 1'd0)) begin
            ap_phi_mux_storemerge_phi_fu_738_p4 = select_ln391_fu_1449_p3;
        end else begin
            ap_phi_mux_storemerge_phi_fu_738_p4 = 'bx;
        end
    end else begin
        ap_phi_mux_storemerge_phi_fu_738_p4 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd1) & (1'b0 == ap_block_state5))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        layer3_out_blk_n = layer3_out_empty_n;
    end else begin
        layer3_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done == 1'b0) | (layer3_out_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3))) begin
        layer3_out_read = 1'b1;
    end else begin
        layer3_out_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_1771) & (1'b1 == ap_CS_fsm_state5))) begin
        layer4_out_blk_n = layer4_out_full_n;
    end else begin
        layer4_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'd1 == and_ln360_reg_1771) & (1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5))) begin
        layer4_out_write = 1'b1;
    end else begin
        layer4_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (1'b0 == ap_block_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~((grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done == 1'b0) | (layer3_out_empty_n == 1'b0)) & (1'd1 == and_ln360_fu_1409_p2) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else if ((~((grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_done == 1'b0) | (layer3_out_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state3) & (1'd0 == and_ln360_fu_1409_p2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((icmp_ln42_fu_1421_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd1) & (1'b0 == ap_block_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state5) & (icmp_ln53_fu_1469_p2 == 1'd0) & (1'b0 == ap_block_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln384_fu_1427_p2 = (pX_1 + 32'd1);

assign add_ln391_fu_1444_p2 = (sX_1 + 32'd1);

assign and_ln360_fu_1409_p2 = (icmp_ln360_fu_1393_p2 & icmp_ln360_1_fu_1403_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (real_start == 1'b0));
end

always @ (*) begin
    ap_block_state5 = ((1'd1 == and_ln360_reg_1771) & (layer4_out_full_n == 1'b0));
end

assign ap_ready = internal_ap_ready;

assign grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start = grp_conv_2d_cl_array_array_ap_fixed_10u_config4_Pipeline_KernelShiftWidth_fu_745_ap_start_reg;

assign i_iw_fu_1189_p2 = (i_iw42_reg_712 + 8'd1);

assign icmp_ln360_1_fu_1403_p2 = (($signed(pX_1) > $signed(32'd8)) ? 1'b1 : 1'b0);

assign icmp_ln360_fu_1393_p2 = ((sX_1 == 32'd9) ? 1'b1 : 1'b0);

assign icmp_ln384_fu_1432_p2 = ((add_ln384_fu_1427_p2 == 32'd247) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_1421_p2 = ((in_index1_reg_724 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln53_fu_1469_p2 = ((i_iw42_reg_712 == 8'd246) ? 1'b1 : 1'b0);

assign in_index_fu_1415_p2 = (in_index1_reg_724 + 2'd1);

assign layer4_out_din = 160'd0;

assign select_ln391_fu_1449_p3 = ((icmp_ln360_reg_1763[0:0] == 1'b1) ? 32'd9 : add_ln391_fu_1444_p2);

assign start_out = real_start;

assign trunc_ln59_fu_1195_p1 = layer3_out_dout[15:0];

endmodule //myproject_conv_2d_cl_array_ap_fixed_20u_array_ap_fixed_16_6_5_3_0_10u_config4_s
